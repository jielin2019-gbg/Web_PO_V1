{"name": "test_login_failed[case2]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <testcase.test_admin_login.TestLogin object at 0x0000021D070A9B70>\nadmin_manage_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c22057c828b17a55e9e7a1d3c53deb06\")>\ncase = {'check': '验证码有误或已过期', 'code': 'lemon123', 'passwd': '123456a', 'title': '验证码错误', ...}\n\n    @pytest.mark.usefixtures(\"admin_manage_driver\")\n    @pytest.mark.usefixtures(\"admin_refresh_page\")\n    @pytest.mark.parametrize(\"case\", error_datas)\n    def test_login_failed(self, admin_manage_driver, case):\n        driver = admin_manage_driver\n>       LoginPage(driver).login(case.get(\"user\"), case.get(\"passwd\"), case.get(\"code\"))\n\ntestcase\\test_admin_login.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\admin_manager\\login_page.py:39: in login\n    self.input_text(self.user_input,\"登录页面_输入用户名\",user)\ntools\\basepage.py:89: in input_text\n    ele = self.wait_until_ele_visible(locator, page_step)\ntools\\basepage.py:29: in wait_until_ele_visible\n    ele = self.wait.until(EC.visibility_of_element_located(locs))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c22057c828b17a55e9e7a1d3c53deb06\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000021D074B2D40>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException"}, "attachments": [{"name": "stderr", "source": "8e208349-d5fa-4a0f-bd41-d810776e6645-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'title': '验证码错误', 'user': 'student', 'passwd': '123456a', 'code': 'lemon123', 'check': '验证码有误或已过期'}"}], "start": 1674740973826, "stop": 1674740994117, "uuid": "d7fdb8ab-4cab-4dd2-8fa4-5ba2be013272", "historyId": "4cb4ccca2d845fa95c98645b10cccb9a", "testCaseId": "d9546ea4e5187a7a337ce2e7838ce24f", "fullName": "testcase.test_admin_login.TestLogin#test_login_failed", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('admin_refresh_page')"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_admin_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "linjie"}, {"name": "thread", "value": "6844-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_admin_login"}]}