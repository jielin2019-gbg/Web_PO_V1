1、给你一个项目，你怎么开展UI自动化测试？？

接口自动化测试 --- 写用例写代码的效率都是最高的。它的变动，主要就是改用例数据。
            --- 尽量使用接口测试覆盖各种场景
            --- 微服务 -- 通信基于数据传递

UI自动化测试  --- 真正与用户交互的是Ui界面
            --- 覆盖主流程、用户操作的最多的流程
            --- 字段有效性检验

测试金字塔 ---

用例来自于哪里？？ --- 人，手工测试

1、给你一个项目，你怎么开展UI自动化测试？？
   哪些业务你要去做自动化测试。
   以前的项目，5个大模块。 --- 哪个模块业务最重要？哪个模块业务线上bug最多？
   为什么要用自动化回归？？ --- 多次重复的执行一样的用例。用户群体，用户量。
   手工用例特色 --- 前置看不懂，步骤看不懂。写的不全面，会漏掉一些东西。不会包含操作数据。
   自己去操作系统，把用例都执行一次。边执行边看看页面的html结构。
   评估出来用例复不复杂，我的数据要怎么准备，我的断言是如何表述？评估元素定位复杂度？

   涉及哪些页面，哪些操作，哪些用例。

2、PO(POM)设计思想 -- page object mode页面对象模型。 page object factory页面对象工厂，仅java
  手工页面用例 == 用例的步骤+用例的断言，全是在页面上操作的。 不同的页面进行不同的操作，组成一条用例。
  10个用例 == 页面A的操作 + 页面B的操作
  200个用例 == 10个页面的不同操作
  用例1 = 页面A的操作1 + 页面B的操作1 + 页面C的操作2 + 页面D的操作3
  用例2 = 页面A的操作1 + 页面B的操作3 + 页面C的操作4 + 页面D的操作4
  ...........
  10个页面 == 10个类(页面的元素定位 + 页面操作)
                  ||
  100个用例 == 页面类的行为调用 + 测试数据

  核心思想：测试对象(被测系统)与测试用例的分离。

3、分析你的业务用例，涉及哪些页面，哪些操作。